facade:
  image: nginx
  container_name: ibex-ingestor
  restart: always
  volumes:
    - ./settings/facade:/etc/nginx/conf.d
    - /var/shared/ingestor/logs/facade:/var/log/nginx
    - /usr/local/cert:/mnt/cert
  links:
    - authnode
    - uploadws_uploader
    - supporttool
  ports:
    - "443:443"
    - "9999:9999"
   
authnode:
  image: docker-local.artifactory.internetbrands.com/ingestor/authws:staging
  container_name: authnode
  restart: always
  volumes:
    - ./settings/authws:/app/ingestor/resources
    - /var/shared/ingestor/logs:/var/log/ingestor
  links:
    - persist_db
    - log_db
    - memcached
  ports:
    - "8090:8080"
  
uploadws_uploader:
  image: docker-local.artifactory.internetbrands.com/ingestor/uploadws:staging
  container_name: uploadws_uploader
  restart: always
  environment:
    - SESAME_SYSTEM=/usr/local/ingestor/system
    - SESAME_COMMON=/usr/local/ingestor/common
    - SESAME_LOCAL_STORE=/usr/local/ingestor/localstore
  volumes:
    - ./settings/uploader:/app/ingestor/resources
    - /var/shared/ingestor/storage/sesame:/usr/local/ingestor
    - /var/shared/ingestor/logs:/var/log/ingestor
  links:
    - persist_db
    - log_db
    - authnode
    - kafka
  ports:
    - "8091:8080"
  working_dir: /app/ingestor
  command: java -DsesameConfigurationFile=resources/sesame.properties -Dlogback.configurationFile=resources/logback.xml -Dhibernate.generate_statistics=true -jar upload-uploadws.war --headless --contextPath /  --jettyXml resources/jetty-env.xml
  
uploadws_processor:
  image: docker-local.artifactory.internetbrands.com/ingestor/uploadws:staging
  container_name: uploadws_processor
  restart: always
  environment:
    - SESAME_SYSTEM=/usr/local/ingestor/system
    - SESAME_COMMON=/usr/local/ingestor/common
    - SESAME_LOCAL_STORE=/usr/local/ingestor/localstore
  volumes:
    - ./settings/processor:/app/ingestor/resources
    - /var/shared/ingestor/storage/sesame:/usr/local/ingestor
    - /var/shared/ingestor/logs:/var/log/ingestor
  links:
    - persist_db
    - log_db
    - authnode
    - kafka
  ports:
    - "8092:8080"
  working_dir: /app/ingestor
  command: java -Xms1g -Xmx6g -XX:+UseG1GC -DsesameConfigurationFile=resources/sesame.properties -Dlogback.configurationFile=resources/logback.xml -Dhibernate.generate_statistics=true -jar upload-uploadws.war --headless --contextPath /  --jettyXml resources/jetty-env.xml
  
supporttool:
  image: docker-local.artifactory.internetbrands.com/ingestor/logs:staging
  container_name: support_tooling
  restart: always
  volumes:
    - ./settings/logs:/app/ingestor/resources
    - /var/shared/ingestor/storage/sesame:/usr/local/ingestor
    - /var/shared/ingestor/logs:/var/log/ingestor
  links:
    - persist_db
    - log_db
    - kafka
  working_dir: /app/ingestor
  command: java -DsesameConfigurationFile=resources/sesame.properties -Dlogback.configurationFile=resources/logback.xml -jar upload-logs.war --headless --contextPath /logs

translator:
  image: docker-local.artifactory.internetbrands.com/udbf_translator:staging
  container_name: translator
  environment:
    - DATABASE_DRIVER=org.postgresql.Driver
    - DATABASE_URL=jdbc:postgresql://persist_db:5432/ibex?currentSchema=ibex&user=postgres
    - LOG_DATABASE_URL=jdbc:postgresql://log_db:5432/ibex_logs?currentSchema=ibex_logs&user=postgres
    - DEST_URL=http://stg-df-dkr1.internetbrands.com:9001/upload/1.0/xml.jsp
    - KAFKA_SERVERS=kafka:9092
    - KAFKA_AUTO_COMMIT_INTERVAL_MS=3600000
    - TRANSLATE_TOPIC=translator
    - MAX_TASKS_COUNT=8
    - CORE_JAVA_SETTINGS=
    - TMP_OUTPUT_DIR=/tmp/translator/
  volumes:
    - /var/shared/ingestor/storage/sesame/common:/usr/local/ingestor/common
    - /var/shared/ingestor/storage/translated:/tmp/translator
    - /var/shared/ingestor/logs/translator:/usr/local/ingestor/log
    - ./settings/translator:/mnt/config
  links:
    - kafka
    - zookeeper
    - persist_db
    - log_db
  
security_manager:
  image: docker-local.artifactory.internetbrands.com/security-manager:staging
  container_name: security_manager
  environment:
    - BACKEND_SERVICE_HOST=ibex-api
    - BACKEND_SERVICE_PORT=8080
    - IBC_REALM_CONFIG_FILE=/mnt/config/stg-ibcv2-config.json
    - AUTH_TOKENS_FILE=/mnt/config/tokens.json
    - AUTH_CONFIG_FILE=/mnt/config/auth-config.json
    - SKIP_AUTHENTICATION=false
    - SKIP_AUTHORIZATION=false
    - LOG_TO_FILE=true
    - LOG_TO_CONSOLE=false
    - REQUEST_LOG_FILE=/mnt/log/proxy-request.log
    - PROXY_LOG_FILE=/mnt/log/proxy.log
  ports:
    - "10001:3000"
  volumes:
    - ./settings/api:/mnt/config
    - /var/shared/ingestor/logs/ibex-api:/mnt/log
  links:
    - ibex-api
  command: ./node_modules/forever/bin/forever src/index.js
  
ibex-api:
  image: docker-local.artifactory.internetbrands.com/ibex-api:staging
  container_name: ibex_api
  environment:
    - DEBUG=true
    - DB_URL=jdbc:postgresql://persist_db/ibex?currentSchema=ibex
    - DB_USERNAME=postgres
    - DB_PASSWORD=
    - KAFKA_SERVERS=kafka:9092
    - DB_DRIVER=org.postgresql.Driver
    - DB_INITIAL_SIZE=3
    - DB_MAX_TOTAL=8
    - DB_MAX_WAIT_MILLIS=5000   
    - LOG_DIR=/mnt/log
  links:
    - persist_db
    - kafka
  volumes:
    - /var/shared/ingestor/logs/ibex-api:/mnt/log
  working_dir: /app
  command: /app/bin/start.sh
  
persist_db:
  image: docker-local.artifactory.internetbrands.com/ibex-db:staging
  container_name: persist_db
  volumes:
    - ./settings/db:/mnt/scripts
  ports:
    - 5433:5432
  
log_db:
  image: docker-local.artifactory.internetbrands.com/ibex-log-db:staging
  container_name: log_db
  volumes:
    - ./settings/db:/mnt/scripts
  ports:
    - 5434:5432

zookeeper:
  image: confluent/zookeeper
  restart: always
  environment:
   zk_id: "1"

kafka:
  image: confluent/kafka
  restart: always
  environment:
    - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
  links:
    - zookeeper
  
kafka_proxy:
  image: confluent/rest-proxy
  restart: always
  links:
    - zookeeper
    - kafka
  environment:
    - RP_ZOOKEEPER_CONNECT=zookeeper:2181

memcached:
  image: memcached
  restart: always
